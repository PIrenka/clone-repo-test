{"version":3,"sources":["components/Profile/styles.module.css","components/Statistics/statisticItem.module.css","components/Statistics/statistics.module.css","components/Profile/Stats.jsx","components/Profile/Profile.jsx","components/Statistics/getRandomBgrColor.js","components/Statistics/StatisticItem.jsx","components/Statistics/Statistics.jsx","components/FriendsList/FriendListItem.jsx","components/FriendsList/index.jsx","components/Transactions/TransactionItem.jsx","components/Transactions/index.jsx","components/App.js","index.js"],"names":["module","exports","Stats","followers","views","likes","className","Styles","stats","statsItem","label","quantity","Profile","name","tag","location","avatar","profile","description","src","alt","defaultProps","getRandomInt","max","Math","floor","random","randomBgrColor","StatisticItem","stat","item","style","backgroundColor","percentage","Statistics","title","statistics","statList","map","id","FriendListItem","friend","class","isOnline","width","FriendList","friends","TransactionItem","type","amount","currency","TransactionHistory","items","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf666762.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"styles_profile__88kEo\",\"avatar\":\"styles_avatar__1TSpT styles_profile__88kEo\",\"name\":\"styles_name__2Tny0\",\"tag\":\"styles_tag__QkeRy\",\"location\":\"styles_location__1uWVF\",\"stats\":\"styles_stats__3PCD_\",\"statsItem\":\"styles_statsItem__3qx_q\",\"label\":\"styles_label__3Zavn styles_tag__QkeRy\",\"quantity\":\"styles_quantity__jciqX styles_name__2Tny0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"statisticItem_item__3b-rZ\",\"label\":\"statisticItem_label__Wfsbh\",\"percentage\":\"statisticItem_percentage__1K7P3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__2E8N9\",\"title\":\"statistics_title__lxYg1\",\"statList\":\"statistics_statList__psy9b\"};","import React from 'react';\n\nimport Styles from './styles.module.css';\n\nconst Stats = ({ followers, views, likes }) => (\n  <ul className={Styles.stats}>\n    <li className={Styles.statsItem}>\n      <span className={Styles.label}>Followers</span>\n      <span className={Styles.quantity}>{followers}</span>\n    </li>\n    <li className={Styles.statsItem}>\n      <span className={Styles.label}>Views</span>\n      <span className={Styles.quantity}>{views}</span>\n    </li>\n    <li className={Styles.statsItem}>\n      <span className={Styles.label}>Likes</span>\n      <span className={Styles.quantity}>{likes}</span>\n    </li>\n  </ul>\n);\n\nexport default Stats;\n","import React from 'react';\n\nimport Stats from './Stats';\nimport PropTypes from 'prop-types';\nimport Styles from './styles.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <div className={Styles.profile}>\n    <div className={Styles.description}>\n      <img src={avatar} alt=\"Аватар пользователя\" className={Styles.avatar} />\n      <p className={Styles.name}>{name}</p>\n      <p className={Styles.tag}>@{tag}</p>\n      <p className={Styles.location}>{location}</p>\n    </div>\n\n    {/* лучше вынести в новый Компонент:\n    <ul className={Styles.stats}>\n      <li className={Styles.statsItem}>\n        <span className={Styles.label}>Followers</span>\n        <span className={Styles.quantity}>{stats['followers']}</span>\n      </li>\n      <li className={Styles.statsItem}>\n        <span className={Styles.label}>Views</span>\n        <span className={Styles.quantity}>{stats['views']}</span>\n      </li>\n      <li className={Styles.statsItem}>\n        <span className={Styles.label}>Likes</span>\n        <span className={Styles.quantity}>{stats['likes']}</span>\n      </li>\n    </ul> */}\n\n    <Stats {...stats} />\n  </div>\n);\n\nProfile.defaultProps = {\n  avatar:\n    // \"https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder\",\n    'https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg',\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","function getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst randomBgrColor = `rgb(${getRandomInt(256)},${getRandomInt(\n  256,\n)},${getRandomInt(256)})`;\n\nexport default randomBgrColor;\n","import React from 'react';\n\nimport Styles from './statisticItem.module.css';\nimport randomBgrColor from './getRandomBgrColor';\n\nconst StatisticItem = ({ stat }) => (\n  <li\n    className={Styles.item}\n    key={randomBgrColor}\n    style={{\n      backgroundColor: randomBgrColor,\n    }}\n  >\n    <span className={Styles.label}>{stat.label}</span>\n    <span className={Styles.percentage}>{stat.percentage}%</span>\n  </li>\n);\nexport default StatisticItem;\n","import React from 'react';\n\nimport StatisticItem from './StatisticItem';\nimport PropTypes from 'prop-types';\nimport Styles from './statistics.module.css';\n\nconst Statistics = ({ title, stats }) => (\n  <section className={Styles.statistics}>\n    <h2 className={Styles.title}>{title}</h2>\n    <ul className={Styles.statList}>\n      {stats.map(stat => (\n        <StatisticItem stat={stat} key={stat.id} />\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.object),\n  stat: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Statistics;\n","import React from \"react\";\r\n\r\nconst FriendListItem = ({ friend }) => (<li class=\"item\">\r\n    <span class=\"status\">{friend.isOnline}</span>\r\n    <img class=\"avatar\" src={friend.avatar} alt={friend.name} width=\"48\" />\r\n    <p class=\"name\">{friend.name}</p>\r\n</li>);\r\nexport default FriendListItem","import React from 'react';\nimport FriendListItem from './FriendListItem';\nimport PropTypes from 'prop-types';\n\nconst FriendList = ({ friends }) => (\n  <ul class=\"friend-list\">\n    {friends.map(friend => (\n      <FriendListItem key={friend.id} friend={friend} />\n    ))}\n  </ul>\n);\n\n// FriendList.defaultProps = {\n//     friend: PropTypes.shape({\n//         avatar: \"https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg\",\n//     })};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.object),\n  friend: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    // avatar: PropTypes.string,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n  }),\n};\n\nexport default FriendList;\n","import React from \"react\";\r\n\r\nconst TransactionItem = ({item}) => (<tr>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n        </tr>\r\n        );\r\nexport default TransactionItem;","import React from 'react';\nimport TransactionItem from './TransactionItem';\nimport PropTypes from 'prop-types';\n\nconst TransactionHistory = ({ items }) => (\n  <table class=\"transaction-history\">\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(item => (\n        <TransactionItem key={item.id} item={item} />\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object),\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    amount: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired,\n  }),\n};\n\nexport default TransactionHistory;\n","import React from 'react';\n\nimport Profile from './Profile';\nimport Statistics from './Statistics';\nimport FriendList from './FriendsList';\nimport TransactionHistory from './Transactions';\n\nimport user from '../data/user.json';\nimport statisticalData from '../data/statistical-data.json';\nimport friends from '../data/friends.json';\nimport transactions from '../data/transactions.json';\n\nimport '../styles.css';\n\nconst App = () => {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      {/* <Statistics stats={statisticalData} /> */}\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}